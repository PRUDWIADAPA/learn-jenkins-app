pipeline {
    agent any
    environment{
        NETLIFY_SITE_ID ='dda0437d-cb46-46c1-9ea6-ebcb12c2db1f'
        NETLIFY_AUTH_TOKEN= credentials('netlify-token')
    }
    stages {
        
        stage('Build') {
            agent{
                docker{
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                echo 'Hello World'
                sh '''
                ls -la
                node --version
                npm --version
                npm ci
                npm run build
                ls -la
                 '''
            }
        } 
        stage('Testing')
        {
            parallel{
                    stage('UnitTest') {
                agent{
                    docker{
                        image 'node:18-alpine'
                        reuseNode true
                    }
                }
                steps {
                
                    sh '''
                test -f build/index.html
                    npm test
                    '''
                }
                    post{
                always{
                    junit 'jest-results/junit.xml'
                }
            }
            }
            stage('E2E') {
                agent{
                    docker{
                        image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                        reuseNode true

                    }
                }
                steps {
                
                    sh '''
                npm install serve
                node_modules/.bin/serve -s build &
                sleep 10
                npx playwright test --reporter=html
                    '''
                }
                    post{
                always{
                    publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, icon: '', keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'Playwright LOCAL', reportTitles: '', useWrapperFileDirectly: true])
                }
            }
            }

                }

        }
        stage('Deploy staging') {
            agent{
                docker{
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                sh '''
                echo "Testing By PRUDWI CEO"
                npm install netlify-cli@20.1.1 node-jq
                node_modules/.bin/netlify --version
                echo "Deploying to site in staging $NETLIFY_SITE_ID"
                node_modules/.bin/netlify status
                node_modules/.bin/netlify deploy --dir=build --json > deploy-output.json
                
                 '''
                 script{
                    env.PRUDWI_URL=sh(script: "node_modules/.bin/node-jq -r '.deploy_url' deploy-output.json", returnStdout: true)
                 }
            }
        } 
        stage('Stage E2E ') {
                    agent{
                        docker{
                            image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                            reuseNode true

                        }
                    }
                    environment{
                        CI_ENVIRONMENT_URL= "env.PRUDWI_URL"
                    }
                    steps {
                    
                        sh '''
                    npx playwright test --reporter=html
                        '''
                    }
                        post{
                    always{
                        publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, icon: '', keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'Playwright E2E', reportTitles: '', useWrapperFileDirectly: true])
                    }
                }
                }
                    
    
        stage('Approval')
        {
            steps{
                timeout(time: 15, unit: 'MINUTES') {
                input message: 'Do you wish to deploy to production?', ok: 'Yes, I am sure!'
                }
                

            }
        }
        stage('Deploy prod') {
            agent{
                docker{
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                sh '''
                echo "Testing By PRUDWI CEO"
                npm install netlify-cli@20.1.1
                node_modules/.bin/netlify --version
                echo "Deploying to site in production $NETLIFY_SITE_ID"
                node_modules/.bin/netlify status
                node_modules/.bin/netlify deploy --dir=build --prod
                 '''
            }
        } 
            stage('PROD E2E ') {
                    agent{
                        docker{
                            image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                            reuseNode true

                        }
                    }
                    environment{
                        CI_ENVIRONMENT_URL= 'https://heroic-melomakarona-df3392.netlify.app'
                    }
                    steps {
                    
                        sh '''
                    npx playwright test --reporter=html
                        '''
                    }
                        post{
                    always{
                        publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, icon: '', keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'Playwright E2E', reportTitles: '', useWrapperFileDirectly: true])
                    }
                }
                }
                    
        
    }
    
}
